/* automatically generated by rust-bindgen 0.71.1 */

pub const LodePNGColorType_LCT_GREY: LodePNGColorType = 0;
pub const LodePNGColorType_LCT_RGB: LodePNGColorType = 2;
pub const LodePNGColorType_LCT_PALETTE: LodePNGColorType = 3;
pub const LodePNGColorType_LCT_GREY_ALPHA: LodePNGColorType = 4;
pub const LodePNGColorType_LCT_RGBA: LodePNGColorType = 6;
pub const LodePNGColorType_LCT_MAX_OCTET_VALUE: LodePNGColorType = 255;
pub type LodePNGColorType = ::std::os::raw::c_uint;
unsafe extern "C" {
    #[link_name = "\u{1}_Z21lodepng_decode_memoryPPhPjS1_PKhm16LodePNGColorTypej"]
    pub fn lodepng_decode_memory(
        out: *mut *mut ::std::os::raw::c_uchar,
        w: *mut ::std::os::raw::c_uint,
        h: *mut ::std::os::raw::c_uint,
        in_: *const ::std::os::raw::c_uchar,
        insize: usize,
        colortype: LodePNGColorType,
        bitdepth: ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_uint;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z16lodepng_decode32PPhPjS1_PKhm"]
    pub fn lodepng_decode32(
        out: *mut *mut ::std::os::raw::c_uchar,
        w: *mut ::std::os::raw::c_uint,
        h: *mut ::std::os::raw::c_uint,
        in_: *const ::std::os::raw::c_uchar,
        insize: usize,
    ) -> ::std::os::raw::c_uint;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z16lodepng_decode24PPhPjS1_PKhm"]
    pub fn lodepng_decode24(
        out: *mut *mut ::std::os::raw::c_uchar,
        w: *mut ::std::os::raw::c_uint,
        h: *mut ::std::os::raw::c_uint,
        in_: *const ::std::os::raw::c_uchar,
        insize: usize,
    ) -> ::std::os::raw::c_uint;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z19lodepng_decode_filePPhPjS1_PKc16LodePNGColorTypej"]
    pub fn lodepng_decode_file(
        out: *mut *mut ::std::os::raw::c_uchar,
        w: *mut ::std::os::raw::c_uint,
        h: *mut ::std::os::raw::c_uint,
        filename: *const ::std::os::raw::c_char,
        colortype: LodePNGColorType,
        bitdepth: ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_uint;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z21lodepng_decode32_filePPhPjS1_PKc"]
    pub fn lodepng_decode32_file(
        out: *mut *mut ::std::os::raw::c_uchar,
        w: *mut ::std::os::raw::c_uint,
        h: *mut ::std::os::raw::c_uint,
        filename: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_uint;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z21lodepng_decode24_filePPhPjS1_PKc"]
    pub fn lodepng_decode24_file(
        out: *mut *mut ::std::os::raw::c_uchar,
        w: *mut ::std::os::raw::c_uint,
        h: *mut ::std::os::raw::c_uint,
        filename: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_uint;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z21lodepng_encode_memoryPPhPmPKhjj16LodePNGColorTypej"]
    pub fn lodepng_encode_memory(
        out: *mut *mut ::std::os::raw::c_uchar,
        outsize: *mut usize,
        image: *const ::std::os::raw::c_uchar,
        w: ::std::os::raw::c_uint,
        h: ::std::os::raw::c_uint,
        colortype: LodePNGColorType,
        bitdepth: ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_uint;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z16lodepng_encode32PPhPmPKhjj"]
    pub fn lodepng_encode32(
        out: *mut *mut ::std::os::raw::c_uchar,
        outsize: *mut usize,
        image: *const ::std::os::raw::c_uchar,
        w: ::std::os::raw::c_uint,
        h: ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_uint;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z16lodepng_encode24PPhPmPKhjj"]
    pub fn lodepng_encode24(
        out: *mut *mut ::std::os::raw::c_uchar,
        outsize: *mut usize,
        image: *const ::std::os::raw::c_uchar,
        w: ::std::os::raw::c_uint,
        h: ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_uint;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z19lodepng_encode_filePKcPKhjj16LodePNGColorTypej"]
    pub fn lodepng_encode_file(
        filename: *const ::std::os::raw::c_char,
        image: *const ::std::os::raw::c_uchar,
        w: ::std::os::raw::c_uint,
        h: ::std::os::raw::c_uint,
        colortype: LodePNGColorType,
        bitdepth: ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_uint;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z21lodepng_encode32_filePKcPKhjj"]
    pub fn lodepng_encode32_file(
        filename: *const ::std::os::raw::c_char,
        image: *const ::std::os::raw::c_uchar,
        w: ::std::os::raw::c_uint,
        h: ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_uint;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z21lodepng_encode24_filePKcPKhjj"]
    pub fn lodepng_encode24_file(
        filename: *const ::std::os::raw::c_char,
        image: *const ::std::os::raw::c_uchar,
        w: ::std::os::raw::c_uint,
        h: ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_uint;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z18lodepng_error_textj"]
    pub fn lodepng_error_text(code: ::std::os::raw::c_uint) -> *const ::std::os::raw::c_char;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct LodePNGDecompressSettings {
    pub ignore_adler32: ::std::os::raw::c_uint,
    pub ignore_nlen: ::std::os::raw::c_uint,
    pub max_output_size: usize,
    pub custom_zlib: ::std::option::Option<
        unsafe extern "C" fn(
            arg1: *mut *mut ::std::os::raw::c_uchar,
            arg2: *mut usize,
            arg3: *const ::std::os::raw::c_uchar,
            arg4: usize,
            arg5: *const LodePNGDecompressSettings,
        ) -> ::std::os::raw::c_uint,
    >,
    pub custom_inflate: ::std::option::Option<
        unsafe extern "C" fn(
            arg1: *mut *mut ::std::os::raw::c_uchar,
            arg2: *mut usize,
            arg3: *const ::std::os::raw::c_uchar,
            arg4: usize,
            arg5: *const LodePNGDecompressSettings,
        ) -> ::std::os::raw::c_uint,
    >,
    pub custom_context: *const ::std::os::raw::c_void,
}
impl Default for LodePNGDecompressSettings {
    fn default() -> Self {
        let mut s = ::std::mem::MaybeUninit::<Self>::uninit();
        unsafe {
            ::std::ptr::write_bytes(s.as_mut_ptr(), 0, 1);
            s.assume_init()
        }
    }
}
unsafe extern "C" {
    pub static lodepng_default_decompress_settings: LodePNGDecompressSettings;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z32lodepng_decompress_settings_initP25LodePNGDecompressSettings"]
    pub fn lodepng_decompress_settings_init(settings: *mut LodePNGDecompressSettings);
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct LodePNGCompressSettings {
    pub btype: ::std::os::raw::c_uint,
    pub use_lz77: ::std::os::raw::c_uint,
    pub windowsize: ::std::os::raw::c_uint,
    pub minmatch: ::std::os::raw::c_uint,
    pub nicematch: ::std::os::raw::c_uint,
    pub lazymatching: ::std::os::raw::c_uint,
    pub custom_zlib: ::std::option::Option<
        unsafe extern "C" fn(
            arg1: *mut *mut ::std::os::raw::c_uchar,
            arg2: *mut usize,
            arg3: *const ::std::os::raw::c_uchar,
            arg4: usize,
            arg5: *const LodePNGCompressSettings,
        ) -> ::std::os::raw::c_uint,
    >,
    pub custom_deflate: ::std::option::Option<
        unsafe extern "C" fn(
            arg1: *mut *mut ::std::os::raw::c_uchar,
            arg2: *mut usize,
            arg3: *const ::std::os::raw::c_uchar,
            arg4: usize,
            arg5: *const LodePNGCompressSettings,
        ) -> ::std::os::raw::c_uint,
    >,
    pub custom_context: *const ::std::os::raw::c_void,
}
impl Default for LodePNGCompressSettings {
    fn default() -> Self {
        let mut s = ::std::mem::MaybeUninit::<Self>::uninit();
        unsafe {
            ::std::ptr::write_bytes(s.as_mut_ptr(), 0, 1);
            s.assume_init()
        }
    }
}
unsafe extern "C" {
    pub static lodepng_default_compress_settings: LodePNGCompressSettings;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z30lodepng_compress_settings_initP23LodePNGCompressSettings"]
    pub fn lodepng_compress_settings_init(settings: *mut LodePNGCompressSettings);
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct LodePNGColorMode {
    pub colortype: LodePNGColorType,
    pub bitdepth: ::std::os::raw::c_uint,
    pub palette: *mut ::std::os::raw::c_uchar,
    pub palettesize: usize,
    pub key_defined: ::std::os::raw::c_uint,
    pub key_r: ::std::os::raw::c_uint,
    pub key_g: ::std::os::raw::c_uint,
    pub key_b: ::std::os::raw::c_uint,
}
impl Default for LodePNGColorMode {
    fn default() -> Self {
        let mut s = ::std::mem::MaybeUninit::<Self>::uninit();
        unsafe {
            ::std::ptr::write_bytes(s.as_mut_ptr(), 0, 1);
            s.assume_init()
        }
    }
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z23lodepng_color_mode_initP16LodePNGColorMode"]
    pub fn lodepng_color_mode_init(info: *mut LodePNGColorMode);
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z26lodepng_color_mode_cleanupP16LodePNGColorMode"]
    pub fn lodepng_color_mode_cleanup(info: *mut LodePNGColorMode);
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z23lodepng_color_mode_copyP16LodePNGColorModePKS_"]
    pub fn lodepng_color_mode_copy(
        dest: *mut LodePNGColorMode,
        source: *const LodePNGColorMode,
    ) -> ::std::os::raw::c_uint;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z23lodepng_color_mode_make16LodePNGColorTypej"]
    pub fn lodepng_color_mode_make(
        colortype: LodePNGColorType,
        bitdepth: ::std::os::raw::c_uint,
    ) -> LodePNGColorMode;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z21lodepng_palette_clearP16LodePNGColorMode"]
    pub fn lodepng_palette_clear(info: *mut LodePNGColorMode);
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z19lodepng_palette_addP16LodePNGColorModehhhh"]
    pub fn lodepng_palette_add(
        info: *mut LodePNGColorMode,
        r: ::std::os::raw::c_uchar,
        g: ::std::os::raw::c_uchar,
        b: ::std::os::raw::c_uchar,
        a: ::std::os::raw::c_uchar,
    ) -> ::std::os::raw::c_uint;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z15lodepng_get_bppPK16LodePNGColorMode"]
    pub fn lodepng_get_bpp(info: *const LodePNGColorMode) -> ::std::os::raw::c_uint;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z20lodepng_get_channelsPK16LodePNGColorMode"]
    pub fn lodepng_get_channels(info: *const LodePNGColorMode) -> ::std::os::raw::c_uint;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z25lodepng_is_greyscale_typePK16LodePNGColorMode"]
    pub fn lodepng_is_greyscale_type(info: *const LodePNGColorMode) -> ::std::os::raw::c_uint;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z21lodepng_is_alpha_typePK16LodePNGColorMode"]
    pub fn lodepng_is_alpha_type(info: *const LodePNGColorMode) -> ::std::os::raw::c_uint;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z23lodepng_is_palette_typePK16LodePNGColorMode"]
    pub fn lodepng_is_palette_type(info: *const LodePNGColorMode) -> ::std::os::raw::c_uint;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z25lodepng_has_palette_alphaPK16LodePNGColorMode"]
    pub fn lodepng_has_palette_alpha(info: *const LodePNGColorMode) -> ::std::os::raw::c_uint;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z22lodepng_can_have_alphaPK16LodePNGColorMode"]
    pub fn lodepng_can_have_alpha(info: *const LodePNGColorMode) -> ::std::os::raw::c_uint;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z20lodepng_get_raw_sizejjPK16LodePNGColorMode"]
    pub fn lodepng_get_raw_size(
        w: ::std::os::raw::c_uint,
        h: ::std::os::raw::c_uint,
        color: *const LodePNGColorMode,
    ) -> usize;
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct LodePNGTime {
    pub year: ::std::os::raw::c_uint,
    pub month: ::std::os::raw::c_uint,
    pub day: ::std::os::raw::c_uint,
    pub hour: ::std::os::raw::c_uint,
    pub minute: ::std::os::raw::c_uint,
    pub second: ::std::os::raw::c_uint,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct LodePNGInfo {
    pub compression_method: ::std::os::raw::c_uint,
    pub filter_method: ::std::os::raw::c_uint,
    pub interlace_method: ::std::os::raw::c_uint,
    pub color: LodePNGColorMode,
    pub background_defined: ::std::os::raw::c_uint,
    pub background_r: ::std::os::raw::c_uint,
    pub background_g: ::std::os::raw::c_uint,
    pub background_b: ::std::os::raw::c_uint,
    pub text_num: usize,
    pub text_keys: *mut *mut ::std::os::raw::c_char,
    pub text_strings: *mut *mut ::std::os::raw::c_char,
    pub itext_num: usize,
    pub itext_keys: *mut *mut ::std::os::raw::c_char,
    pub itext_langtags: *mut *mut ::std::os::raw::c_char,
    pub itext_transkeys: *mut *mut ::std::os::raw::c_char,
    pub itext_strings: *mut *mut ::std::os::raw::c_char,
    pub time_defined: ::std::os::raw::c_uint,
    pub time: LodePNGTime,
    pub phys_defined: ::std::os::raw::c_uint,
    pub phys_x: ::std::os::raw::c_uint,
    pub phys_y: ::std::os::raw::c_uint,
    pub phys_unit: ::std::os::raw::c_uint,
    pub gama_defined: ::std::os::raw::c_uint,
    pub gama_gamma: ::std::os::raw::c_uint,
    pub chrm_defined: ::std::os::raw::c_uint,
    pub chrm_white_x: ::std::os::raw::c_uint,
    pub chrm_white_y: ::std::os::raw::c_uint,
    pub chrm_red_x: ::std::os::raw::c_uint,
    pub chrm_red_y: ::std::os::raw::c_uint,
    pub chrm_green_x: ::std::os::raw::c_uint,
    pub chrm_green_y: ::std::os::raw::c_uint,
    pub chrm_blue_x: ::std::os::raw::c_uint,
    pub chrm_blue_y: ::std::os::raw::c_uint,
    pub srgb_defined: ::std::os::raw::c_uint,
    pub srgb_intent: ::std::os::raw::c_uint,
    pub iccp_defined: ::std::os::raw::c_uint,
    pub iccp_name: *mut ::std::os::raw::c_char,
    pub iccp_profile: *mut ::std::os::raw::c_uchar,
    pub iccp_profile_size: ::std::os::raw::c_uint,
    pub sbit_defined: ::std::os::raw::c_uint,
    pub sbit_r: ::std::os::raw::c_uint,
    pub sbit_g: ::std::os::raw::c_uint,
    pub sbit_b: ::std::os::raw::c_uint,
    pub sbit_a: ::std::os::raw::c_uint,
    pub unknown_chunks_data: [*mut ::std::os::raw::c_uchar; 3usize],
    pub unknown_chunks_size: [usize; 3usize],
}
impl Default for LodePNGInfo {
    fn default() -> Self {
        let mut s = ::std::mem::MaybeUninit::<Self>::uninit();
        unsafe {
            ::std::ptr::write_bytes(s.as_mut_ptr(), 0, 1);
            s.assume_init()
        }
    }
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z17lodepng_info_initP11LodePNGInfo"]
    pub fn lodepng_info_init(info: *mut LodePNGInfo);
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z20lodepng_info_cleanupP11LodePNGInfo"]
    pub fn lodepng_info_cleanup(info: *mut LodePNGInfo);
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z17lodepng_info_copyP11LodePNGInfoPKS_"]
    pub fn lodepng_info_copy(
        dest: *mut LodePNGInfo,
        source: *const LodePNGInfo,
    ) -> ::std::os::raw::c_uint;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z16lodepng_add_textP11LodePNGInfoPKcS2_"]
    pub fn lodepng_add_text(
        info: *mut LodePNGInfo,
        key: *const ::std::os::raw::c_char,
        str_: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_uint;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z18lodepng_clear_textP11LodePNGInfo"]
    pub fn lodepng_clear_text(info: *mut LodePNGInfo);
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z17lodepng_add_itextP11LodePNGInfoPKcS2_S2_S2_"]
    pub fn lodepng_add_itext(
        info: *mut LodePNGInfo,
        key: *const ::std::os::raw::c_char,
        langtag: *const ::std::os::raw::c_char,
        transkey: *const ::std::os::raw::c_char,
        str_: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_uint;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z19lodepng_clear_itextP11LodePNGInfo"]
    pub fn lodepng_clear_itext(info: *mut LodePNGInfo);
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z15lodepng_set_iccP11LodePNGInfoPKcPKhj"]
    pub fn lodepng_set_icc(
        info: *mut LodePNGInfo,
        name: *const ::std::os::raw::c_char,
        profile: *const ::std::os::raw::c_uchar,
        profile_size: ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_uint;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z17lodepng_clear_iccP11LodePNGInfo"]
    pub fn lodepng_clear_icc(info: *mut LodePNGInfo);
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z15lodepng_convertPhPKhPK16LodePNGColorModeS4_jj"]
    pub fn lodepng_convert(
        out: *mut ::std::os::raw::c_uchar,
        in_: *const ::std::os::raw::c_uchar,
        mode_out: *const LodePNGColorMode,
        mode_in: *const LodePNGColorMode,
        w: ::std::os::raw::c_uint,
        h: ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_uint;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct LodePNGDecoderSettings {
    pub zlibsettings: LodePNGDecompressSettings,
    pub ignore_crc: ::std::os::raw::c_uint,
    pub ignore_critical: ::std::os::raw::c_uint,
    pub ignore_end: ::std::os::raw::c_uint,
    pub color_convert: ::std::os::raw::c_uint,
    pub read_text_chunks: ::std::os::raw::c_uint,
    pub remember_unknown_chunks: ::std::os::raw::c_uint,
    pub max_text_size: usize,
    pub max_icc_size: usize,
}
impl Default for LodePNGDecoderSettings {
    fn default() -> Self {
        let mut s = ::std::mem::MaybeUninit::<Self>::uninit();
        unsafe {
            ::std::ptr::write_bytes(s.as_mut_ptr(), 0, 1);
            s.assume_init()
        }
    }
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z29lodepng_decoder_settings_initP22LodePNGDecoderSettings"]
    pub fn lodepng_decoder_settings_init(settings: *mut LodePNGDecoderSettings);
}
pub const LodePNGFilterStrategy_LFS_ZERO: LodePNGFilterStrategy = 0;
pub const LodePNGFilterStrategy_LFS_ONE: LodePNGFilterStrategy = 1;
pub const LodePNGFilterStrategy_LFS_TWO: LodePNGFilterStrategy = 2;
pub const LodePNGFilterStrategy_LFS_THREE: LodePNGFilterStrategy = 3;
pub const LodePNGFilterStrategy_LFS_FOUR: LodePNGFilterStrategy = 4;
pub const LodePNGFilterStrategy_LFS_MINSUM: LodePNGFilterStrategy = 5;
pub const LodePNGFilterStrategy_LFS_ENTROPY: LodePNGFilterStrategy = 6;
pub const LodePNGFilterStrategy_LFS_BRUTE_FORCE: LodePNGFilterStrategy = 7;
pub const LodePNGFilterStrategy_LFS_PREDEFINED: LodePNGFilterStrategy = 8;
pub type LodePNGFilterStrategy = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct LodePNGColorStats {
    pub colored: ::std::os::raw::c_uint,
    pub key: ::std::os::raw::c_uint,
    pub key_r: ::std::os::raw::c_ushort,
    pub key_g: ::std::os::raw::c_ushort,
    pub key_b: ::std::os::raw::c_ushort,
    pub alpha: ::std::os::raw::c_uint,
    pub numcolors: ::std::os::raw::c_uint,
    pub palette: [::std::os::raw::c_uchar; 1024usize],
    pub bits: ::std::os::raw::c_uint,
    pub numpixels: usize,
    pub allow_palette: ::std::os::raw::c_uint,
    pub allow_greyscale: ::std::os::raw::c_uint,
}
impl Default for LodePNGColorStats {
    fn default() -> Self {
        let mut s = ::std::mem::MaybeUninit::<Self>::uninit();
        unsafe {
            ::std::ptr::write_bytes(s.as_mut_ptr(), 0, 1);
            s.assume_init()
        }
    }
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z24lodepng_color_stats_initP17LodePNGColorStats"]
    pub fn lodepng_color_stats_init(stats: *mut LodePNGColorStats);
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z27lodepng_compute_color_statsP17LodePNGColorStatsPKhjjPK16LodePNGColorMode"]
    pub fn lodepng_compute_color_stats(
        stats: *mut LodePNGColorStats,
        image: *const ::std::os::raw::c_uchar,
        w: ::std::os::raw::c_uint,
        h: ::std::os::raw::c_uint,
        mode_in: *const LodePNGColorMode,
    ) -> ::std::os::raw::c_uint;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct LodePNGEncoderSettings {
    pub zlibsettings: LodePNGCompressSettings,
    pub auto_convert: ::std::os::raw::c_uint,
    pub filter_palette_zero: ::std::os::raw::c_uint,
    pub filter_strategy: LodePNGFilterStrategy,
    pub predefined_filters: *const ::std::os::raw::c_uchar,
    pub force_palette: ::std::os::raw::c_uint,
    pub add_id: ::std::os::raw::c_uint,
    pub text_compression: ::std::os::raw::c_uint,
}
impl Default for LodePNGEncoderSettings {
    fn default() -> Self {
        let mut s = ::std::mem::MaybeUninit::<Self>::uninit();
        unsafe {
            ::std::ptr::write_bytes(s.as_mut_ptr(), 0, 1);
            s.assume_init()
        }
    }
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z29lodepng_encoder_settings_initP22LodePNGEncoderSettings"]
    pub fn lodepng_encoder_settings_init(settings: *mut LodePNGEncoderSettings);
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct LodePNGState {
    pub decoder: LodePNGDecoderSettings,
    pub encoder: LodePNGEncoderSettings,
    pub info_raw: LodePNGColorMode,
    pub info_png: LodePNGInfo,
    pub error: ::std::os::raw::c_uint,
}
impl Default for LodePNGState {
    fn default() -> Self {
        let mut s = ::std::mem::MaybeUninit::<Self>::uninit();
        unsafe {
            ::std::ptr::write_bytes(s.as_mut_ptr(), 0, 1);
            s.assume_init()
        }
    }
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z18lodepng_state_initP12LodePNGState"]
    pub fn lodepng_state_init(state: *mut LodePNGState);
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z21lodepng_state_cleanupP12LodePNGState"]
    pub fn lodepng_state_cleanup(state: *mut LodePNGState);
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z18lodepng_state_copyP12LodePNGStatePKS_"]
    pub fn lodepng_state_copy(dest: *mut LodePNGState, source: *const LodePNGState);
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z14lodepng_decodePPhPjS1_P12LodePNGStatePKhm"]
    pub fn lodepng_decode(
        out: *mut *mut ::std::os::raw::c_uchar,
        w: *mut ::std::os::raw::c_uint,
        h: *mut ::std::os::raw::c_uint,
        state: *mut LodePNGState,
        in_: *const ::std::os::raw::c_uchar,
        insize: usize,
    ) -> ::std::os::raw::c_uint;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z15lodepng_inspectPjS_P12LodePNGStatePKhm"]
    pub fn lodepng_inspect(
        w: *mut ::std::os::raw::c_uint,
        h: *mut ::std::os::raw::c_uint,
        state: *mut LodePNGState,
        in_: *const ::std::os::raw::c_uchar,
        insize: usize,
    ) -> ::std::os::raw::c_uint;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z21lodepng_inspect_chunkP12LodePNGStatemPKhm"]
    pub fn lodepng_inspect_chunk(
        state: *mut LodePNGState,
        pos: usize,
        in_: *const ::std::os::raw::c_uchar,
        insize: usize,
    ) -> ::std::os::raw::c_uint;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z14lodepng_encodePPhPmPKhjjP12LodePNGState"]
    pub fn lodepng_encode(
        out: *mut *mut ::std::os::raw::c_uchar,
        outsize: *mut usize,
        image: *const ::std::os::raw::c_uchar,
        w: ::std::os::raw::c_uint,
        h: ::std::os::raw::c_uint,
        state: *mut LodePNGState,
    ) -> ::std::os::raw::c_uint;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z20lodepng_chunk_lengthPKh"]
    pub fn lodepng_chunk_length(chunk: *const ::std::os::raw::c_uchar) -> ::std::os::raw::c_uint;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z18lodepng_chunk_typePcPKh"]
    pub fn lodepng_chunk_type(
        type_: *mut ::std::os::raw::c_char,
        chunk: *const ::std::os::raw::c_uchar,
    );
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z25lodepng_chunk_type_equalsPKhPKc"]
    pub fn lodepng_chunk_type_equals(
        chunk: *const ::std::os::raw::c_uchar,
        type_: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_uchar;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z23lodepng_chunk_ancillaryPKh"]
    pub fn lodepng_chunk_ancillary(
        chunk: *const ::std::os::raw::c_uchar,
    ) -> ::std::os::raw::c_uchar;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z21lodepng_chunk_privatePKh"]
    pub fn lodepng_chunk_private(chunk: *const ::std::os::raw::c_uchar) -> ::std::os::raw::c_uchar;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z24lodepng_chunk_safetocopyPKh"]
    pub fn lodepng_chunk_safetocopy(
        chunk: *const ::std::os::raw::c_uchar,
    ) -> ::std::os::raw::c_uchar;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z18lodepng_chunk_dataPh"]
    pub fn lodepng_chunk_data(chunk: *mut ::std::os::raw::c_uchar) -> *mut ::std::os::raw::c_uchar;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z24lodepng_chunk_data_constPKh"]
    pub fn lodepng_chunk_data_const(
        chunk: *const ::std::os::raw::c_uchar,
    ) -> *const ::std::os::raw::c_uchar;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z23lodepng_chunk_check_crcPKh"]
    pub fn lodepng_chunk_check_crc(chunk: *const ::std::os::raw::c_uchar)
        -> ::std::os::raw::c_uint;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z26lodepng_chunk_generate_crcPh"]
    pub fn lodepng_chunk_generate_crc(chunk: *mut ::std::os::raw::c_uchar);
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z18lodepng_chunk_nextPhS_"]
    pub fn lodepng_chunk_next(
        chunk: *mut ::std::os::raw::c_uchar,
        end: *mut ::std::os::raw::c_uchar,
    ) -> *mut ::std::os::raw::c_uchar;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z24lodepng_chunk_next_constPKhS0_"]
    pub fn lodepng_chunk_next_const(
        chunk: *const ::std::os::raw::c_uchar,
        end: *const ::std::os::raw::c_uchar,
    ) -> *const ::std::os::raw::c_uchar;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z18lodepng_chunk_findPhS_PKc"]
    pub fn lodepng_chunk_find(
        chunk: *mut ::std::os::raw::c_uchar,
        end: *mut ::std::os::raw::c_uchar,
        type_: *const ::std::os::raw::c_char,
    ) -> *mut ::std::os::raw::c_uchar;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z24lodepng_chunk_find_constPKhS0_PKc"]
    pub fn lodepng_chunk_find_const(
        chunk: *const ::std::os::raw::c_uchar,
        end: *const ::std::os::raw::c_uchar,
        type_: *const ::std::os::raw::c_char,
    ) -> *const ::std::os::raw::c_uchar;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z20lodepng_chunk_appendPPhPmPKh"]
    pub fn lodepng_chunk_append(
        out: *mut *mut ::std::os::raw::c_uchar,
        outsize: *mut usize,
        chunk: *const ::std::os::raw::c_uchar,
    ) -> ::std::os::raw::c_uint;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z20lodepng_chunk_createPPhPmjPKcPKh"]
    pub fn lodepng_chunk_create(
        out: *mut *mut ::std::os::raw::c_uchar,
        outsize: *mut usize,
        length: ::std::os::raw::c_uint,
        type_: *const ::std::os::raw::c_char,
        data: *const ::std::os::raw::c_uchar,
    ) -> ::std::os::raw::c_uint;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z13lodepng_crc32PKhm"]
    pub fn lodepng_crc32(buf: *const ::std::os::raw::c_uchar, len: usize)
        -> ::std::os::raw::c_uint;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z15lodepng_inflatePPhPmPKhmPK25LodePNGDecompressSettings"]
    pub fn lodepng_inflate(
        out: *mut *mut ::std::os::raw::c_uchar,
        outsize: *mut usize,
        in_: *const ::std::os::raw::c_uchar,
        insize: usize,
        settings: *const LodePNGDecompressSettings,
    ) -> ::std::os::raw::c_uint;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z23lodepng_zlib_decompressPPhPmPKhmPK25LodePNGDecompressSettings"]
    pub fn lodepng_zlib_decompress(
        out: *mut *mut ::std::os::raw::c_uchar,
        outsize: *mut usize,
        in_: *const ::std::os::raw::c_uchar,
        insize: usize,
        settings: *const LodePNGDecompressSettings,
    ) -> ::std::os::raw::c_uint;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z21lodepng_zlib_compressPPhPmPKhmPK23LodePNGCompressSettings"]
    pub fn lodepng_zlib_compress(
        out: *mut *mut ::std::os::raw::c_uchar,
        outsize: *mut usize,
        in_: *const ::std::os::raw::c_uchar,
        insize: usize,
        settings: *const LodePNGCompressSettings,
    ) -> ::std::os::raw::c_uint;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z28lodepng_huffman_code_lengthsPjPKjmj"]
    pub fn lodepng_huffman_code_lengths(
        lengths: *mut ::std::os::raw::c_uint,
        frequencies: *const ::std::os::raw::c_uint,
        numcodes: usize,
        maxbitlen: ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_uint;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z15lodepng_deflatePPhPmPKhmPK23LodePNGCompressSettings"]
    pub fn lodepng_deflate(
        out: *mut *mut ::std::os::raw::c_uchar,
        outsize: *mut usize,
        in_: *const ::std::os::raw::c_uchar,
        insize: usize,
        settings: *const LodePNGCompressSettings,
    ) -> ::std::os::raw::c_uint;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z17lodepng_load_filePPhPmPKc"]
    pub fn lodepng_load_file(
        out: *mut *mut ::std::os::raw::c_uchar,
        outsize: *mut usize,
        filename: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_uint;
}
unsafe extern "C" {
    #[link_name = "\u{1}_Z17lodepng_save_filePKhmPKc"]
    pub fn lodepng_save_file(
        buffer: *const ::std::os::raw::c_uchar,
        buffersize: usize,
        filename: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_uint;
}
